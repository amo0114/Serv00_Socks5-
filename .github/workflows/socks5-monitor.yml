name: SOCKS5 Monitor

on:
  schedule:
    - cron: '*/30 * * * *'  # 每30分钟执行一次

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq sshpass

      - name: Check and restart SOCKS5
        id: check_socks5
        run: |
          # 定义 SOCKS5 连接信息
          SOCKS5_PROXY="moyuan:qwer0115@31.186.85.171:57061"
          
          # 检查 SOCKS5 程序是否正在运行
          if curl -s --socks5 ${SOCKS5_PROXY} http://ipinfo.io/ip | grep -q '31.186.85.171'; then
            echo "SOCKS5 程序正在运行。"
            echo "::set-output name=status::running"
          else
            echo "SOCKS5 程序未运行，正在重新启动..."
            # 使用 SSH 连接到 VPS 并重启 SOCKS5 程序
            sshpass -p '${{ secrets.SSH_PASSWORD }}' ssh -o StrictHostKeyChecking=no ${YOUR_SSH_USERNAME}@${YOUR_VPS_IP} "
              # 启动 SOCKS5 程序的命令
              nohup /home/${USER}/.s5/s5 -c /home/${USER}/.s5/config.json >/dev/null 2>&1 &
              sleep 2
              if pgrep -x 's5' > /dev/null; then
                echo 'SOCKS5 程序已启动。'
                echo 'restart_success' > /home/${USER}/socks5_status.txt
              else
                echo 'SOCKS5 程序启动失败。'
                echo 'restart_failed' > /home/${USER}/socks5_status.txt
              fi
            "
            # 从 VPS 上读取重启状态
            SSH_STATUS=$(sshpass -p '${{ secrets.SSH_PASSWORD }}' ssh -o StrictHostKeyChecking=no ${YOUR_SSH_USERNAME}@${YOUR_VPS_IP} "cat /home/${USER}/socks5_status.txt")
            echo "::set-output name=status::$SSH_STATUS"
          fi

      - name: Send Telegram notification
        if: steps.check_socks5.outputs.status == 'restart_success' || steps.check_socks5.outputs.status == 'restart_failed'
        run: |
          MESSAGE="SOCKS5 状态更新:\n"
          if [ "${{ steps.check_socks5.outputs.status }}" == "running" ]; then
            MESSAGE+="SOCKS5 程序正在运行。"
          elif [ "${{ steps.check_socks5.outputs.status }}" == "restart_success" ]; then
            MESSAGE+="SOCKS5 程序未运行，但已成功重新启动。"
          elif [ "${{ steps.check_socks5.outputs.status }}" == "restart_failed" ]; then
            MESSAGE+="SOCKS5 程序未运行，重新启动失败。"
          fi

          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$MESSAGE"
