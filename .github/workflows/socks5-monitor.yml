name: SOCKS5 Monitor

on:
  schedule:
    - cron: '*/30 * * * *'  # 每30分钟执行一次
  workflow_dispatch:  # 添加这个部分以允许手动触发

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq sshpass

      - name: Check and restart SOCKS5
        run: |
          # 定义 SOCKS5 连接信息
          SOCKS5_PROXY="moyuan:qwer0115@31.186.85.171:57061"
          RESTART_MESSAGE="SOCKS5 程序正在运行。"
          
          # 检查 SOCKS5 程序是否正在运行
          if curl -s --socks5 ${SOCKS5_PROXY} http://ipinfo.io/ip | grep -q 'IP'; then
            echo "SOCKS5 程序正在运行。"
            STATUS="正常运行"
          else
            echo "SOCKS5 程序未运行，正在重新启动..."
            STATUS="未运行，已尝试重启"
            # 使用 SSH 连接到 VPS 并重启 SOCKS5 程序
            sshpass -p '${{ secrets.SSH_PASSWORD }}' ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.VPS_IP }} "
              # 启动 SOCKS5 程序的命令
              nohup ${FILE_PATH}/s5 -c ${FILE_PATH}/config.json >/dev/null 2>&1 &
              sleep 2
            "
            # 再次检查 SOCKS5 程序是否成功启动
            if curl -s --socks5 ${SOCKS5_PROXY} http://ipinfo.io/ip | grep -q 'IP'; then
              echo "SOCKS5 程序已成功重启。"
              RESTART_MESSAGE="SOCKS5 程序已成功重启。"
            else
              echo "SOCKS5 程序重启失败。"
              RESTART_MESSAGE="SOCKS5 程序重启失败。"
            fi
          fi

      - name: Send notification to Telegram
        run: |
          # 发送通知到 Telegram 的代码
          MESSAGE="SOCKS5 程序检查完成。状态：${STATUS}。${RESTART_MESSAGE}"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_API_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.CHAT_ID }}&text=${MESSAGE}"
